---
# ========== PipeWire y WirePlumber ==========

# Obtener UID de user
- name: Obtener UID de user
  ansible.builtin.getent:
    database: passwd
    key: "{{ target_user }}"
  register: user_passwd

- name: Configurar variable UID
  set_fact:
    user_uid: "{{ user_passwd.ansible_facts.getent_passwd[target_user][1] }}"

# Habiliar y arranva servicios
- name: Habilitar y arrancar servicios de PipeWire y WirePlumber para user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ user_uid }}"
  systemd:
    name: "{{ item }}"
    scope: user
    enabled: true
    state: started
  loop:
    - pipewire.service
    - pipewire-pulse.service
    - wireplumber.service
  tags: [multimedia, audio, config]

# Verificar que PipeWire este activo
- name: Verificar que PipeWire est√° activo con pactl
  ansible.builtin.command: pactl info
  register: pactl_info
  changed_when: false
  failed_when: false
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ user_uid }}"
  tags: [multimedia, audio, verify]

- name: Mostrar servidor de audio actual
  ansible.builtin.debug:
    msg: "{{ pactl_info.stdout_lines | default([]) }}"
  tags: [multimedia, audio, verify]

